{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/movies.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","searchWord","a","fetch","response","json","undefined","FindMovie","addMovie","useState","setSearchWord","setMovie","searchError","setSearchError","loadMovie","movieFromServer","addMovieHandler","event","preventDefault","searchInput","document","querySelector","value","handleReset","htmlFor","type","id","placeholder","classNames","onChange","target","onClick","App","setMovies","newMovie","some","ReactDOM","render","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uCCffC,G,MAAU,yDAET,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,aAAgBE,IADvC,cACCG,EADD,gBAEeA,EAASC,OAFxB,eAIgBC,KAFflB,EAFD,QAIKU,OAJL,yCAKI,MALJ,gCAQEV,GARF,4C,sBCUA,IAAMmB,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAAoCC,mBAAS,IAA7C,mBAAOR,EAAP,KAAmBS,EAAnB,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOrB,EAAP,KAAcuB,EAAd,KACA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAS,uCAAG,4BAAAZ,EAAA,sEACcF,EAASC,GADvB,OAGQ,QAFlBc,EADU,SAIdF,GAAe,GAGjBF,EAASI,GAPO,2CAAH,qDAyBTC,EAAkB,SAACC,GACvBA,EAAMC,iBACQ,OAAV9B,IACFoB,EAASpB,GACTsB,EAAc,IAnBE,WAClB,IAAMS,EAAcC,SAASC,cAAc,SAEvB,OAAhBF,IACFA,EAAYG,MAAQ,IAGtBX,EAAS,MAaPY,KAIJ,OACE,qCACE,uBAAMlC,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQmC,QAAQ,cAAjC,wBAEE,qBAAKnC,UAAU,UAAf,SACE,uBACEoC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtC,UAAWuC,IAAW,QAAS,CAAE,YAAahB,IAC9CiB,SA1BO,SAACZ,GACpBP,EAAcO,EAAMa,OAAOR,OAC3BT,GAAe,WA6BPD,GAEE,mBAAGvB,UAAU,iBAAb,qDAON,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBACV0C,QAASjB,EAHX,4BAQF,qBAAKzB,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBACV0C,QAAS,SAACd,GACRD,EAAgBC,IAJpB,qCAaN,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBAEED,GAAS,cAAC,EAAD,CAAWA,MAAOA,WCnGxB4C,EAAgB,WAC3B,MAA4BvB,mBAAS,IAArC,mBAAOb,EAAP,KAAeqC,EAAf,KAQA,OACE,sBAAK5C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWmB,SAZA,SAAC0B,GACXtC,EAAOuC,MAAK,SAAA/C,GAAK,OAAIA,EAAMU,SAAWoC,EAASpC,WAClDmC,EAAU,GAAD,mBAAKrC,GAAL,CAAasC,cCN5BE,IAASC,OAAO,cAAC,EAAD,IAASjB,SAASkB,eAAe,W","file":"static/js/main.e273c457.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=a710ccf6&';\n\nexport async function getMovie(searchWord: string) {\n  const response = await fetch(`${API_URL}t=${searchWord}`);\n  const movie = await response.json();\n\n  if (movie.imdbID === undefined) {\n    return null;\n  }\n\n  return movie;\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/movies';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [searchWord, setSearchWord] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [searchError, setSearchError] = useState(false);\n\n  const loadMovie = async () => {\n    const movieFromServer = await getMovie(searchWord);\n\n    if (movieFromServer === null) {\n      setSearchError(true);\n    }\n\n    setMovie(movieFromServer);\n  };\n\n  const handleReset = () => {\n    const searchInput = document.querySelector('input');\n\n    if (searchInput !== null) {\n      searchInput.value = '';\n    }\n\n    setMovie(null);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWord(event.target.value);\n    setSearchError(false);\n  };\n\n  const addMovieHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (movie !== null) {\n      addMovie(movie);\n      setSearchWord('');\n      handleReset();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={classNames('input', { 'is-danger': searchError })}\n                onChange={handleChange}\n              />\n            </div>\n          </label>\n          {\n            searchError\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such a title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              onClick={(event) => {\n                addMovieHandler(event);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie && <MovieCard movie={movie} />\n        }\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([] as Movie[]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}